{
  "name": "Recipe Creation Notification",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "meal-prep-events",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-node",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition-1",
              "leftValue": "={{ $json.eventType }}",
              "rightValue": "recipe.created",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "if-node",
      "name": "Check Event Type",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "fromEmail": "noreply@yourdomain.com",
        "toEmail": "={{ $json.user.email }}",
        "subject": "New Recipe Added: {{ $json.data.title }}",
        "text": "Hi {{ $json.user.displayName }},\n\nYour recipe '{{ $json.data.title }}' has been successfully added to your collection!\n\nRecipe Details:\n- Servings: {{ $json.data.servings }}\n- Prep Time: {{ $json.data.prepTime }} minutes\n- Cook Time: {{ $json.data.cookTime }} minutes\n- Difficulty: {{ $json.data.difficulty }}\n\nYou can view and edit this recipe in your MealPrep app.\n\nBest regards,\nMealPrep Team"
      },
      "id": "email-node",
      "name": "Send Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [680, 200]
    },
    {
      "parameters": {
        "channel": "meal-prep-notifications",
        "text": "üç≥ New recipe added by {{ $json.user.displayName }}: **{{ $json.data.title }}**\n\nüìä Recipe details:\n‚Ä¢ Servings: {{ $json.data.servings }}\n‚Ä¢ Prep time: {{ $json.data.prepTime }} min\n‚Ä¢ Cook time: {{ $json.data.cookTime }} min\n‚Ä¢ Difficulty: {{ $json.data.difficulty }}\n\nüè∑Ô∏è Tags: {{ $json.data.tags.join(', ') }}"
      },
      "id": "slack-node",
      "name": "Post to Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 1,
      "position": [680, 400]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"status\": \"success\",\n  \"message\": \"Recipe notification sent\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}"
      },
      "id": "response-node",
      "name": "Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [900, 300]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Check Event Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Event Type": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Post to Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Email": {
      "main": [
        [
          {
            "node": "Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post to Slack": {
      "main": [
        [
          {
            "node": "Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1"
}
